events {
    worker_connections 1024;
}

http {
  server {
    # listen 80;
    listen 443 ssl;
    server_name localhost;

    # SSL certificates generated by OpenSSL
    ssl_certificate /etc/ssl/certs/server.crt;
    ssl_certificate_key /etc/ssl/certs/server.key;

    # Optional: Client certificate authentication
    # ssl_client_certificate /etc/ssl/certs/ca.crt;
    # ssl_verify_client on;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Additional security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    error_log /dev/stderr warn; # Direct error logs to stderr with 'warn' level

    # Serve static files
    location / {
      root /usr/share/nginx/html;
      try_files $uri /index.html;
    }

    location /auth/ {
      proxy_pass http://keycloak:8080/auth/;  # Note trailing slash!
      proxy_http_version 1.1;

      # Forward the client host/scheme/port
      proxy_set_header Host              $host;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port  $server_port;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

      # Avoid nginx altering Location headers unexpectedly
      proxy_redirect off;
    }

    # Proxy API requests to app (todoistapp)
    location /api/todoistapp/ {
      proxy_pass http://todoistapp:8080/;  # Note trailing slash!
      proxy_set_header Host $host;
    }
    # Proxy API requests to app (adminapp)
    location /api/adminapp/ {
      proxy_pass http://adminapp:8080/;  # Note trailing slash!
      proxy_set_header Host $host;
    }
  }

    # Redirect HTTP to HTTPS
    server {
      listen 80;
      server_name localhost;
      return 301 https://$server_name$request_uri;
    }
}